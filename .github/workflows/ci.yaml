name: CI

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  map-side-input:
    name: map-side-input-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
    steps:
      - name: "Step 1: Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: "Step 2: Run prerequisite steps"
        run: | 
          echo "IMAGE_TAG=$(git describe --tags --always)" >> $GITHUB_ENV
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.0

      - name: "Step 3: Setup Golang"
        uses: actions/setup-go@v4.0.0
        with:
          go-version: '1.21'

      - name: "Step 4: Restore Go build cache"
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: "Step 5: Run Lint on map-side-input"
        run: make lint
        working-directory: ./map-side-input

      - name: "Step 6: Run Lint on map-side-input udf"
        run: make lint
        working-directory: ./map-side-input/udf

      - name: "Step 7: Build and create docker image for map-side-input"
        run: make image
        working-directory: ./map-side-input
        env:
          TAG: "${{ env.IMAGE_TAG }}"

      - name: "Step 8: Build and create docker image for map-side-input udf"
        run: make image
        working-directory: ./map-side-input/udf
        env:
          TAG: "${{ env.IMAGE_TAG }}"

      - name: "Step 9: Docker Login"
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}

      - name: "Step 10: Build docker image"
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push "quay.io/numaio/numaproj-contrib/e2e-map-sideinput-example:${{ env.IMAGE_TAG }}"
          docker push "quay.io/numaio/numaproj-contrib/e2e-map-sideinput-udf:${{ env.IMAGE_TAG }}"

  reduce-side-input:
    name: reduce-side-input-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
    steps:
      - name: "Step 1: Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: "Step 2: Run prerequisite steps"
        run: |
          echo "IMAGE_TAG=$(git describe --tags --always)" >> $GITHUB_ENV
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.0

      - name: "Step 2: Checkout repository"
        uses: actions/checkout@v3

      - name: "Step 3: Setup Golang"
        uses: actions/setup-go@v4.0.0
        with:
          go-version: '1.21'

      - name: "Step 4: Restore Go build cache"
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: "Step 5: Run Lint on reduce-side-input"
        run: make lint
        working-directory: ./map-side-input

      - name: "Step 6: Run Lint on reduce-side-input udf"
        run: make lint
        working-directory: ./map-side-input/udf

      - name: "Step 7: Build and create docker image for reduce-side-input"
        run: make image
        working-directory: ./map-side-input
        env:
          TAG: ${{ env.IMAGE_TAG }}

      - name: "Step 8: Build and create docker image for reduce-side-input udf"
        run: make image
        working-directory: ./map-side-input/udf
        env:
          TAG: ${{ env.IMAGE_TAG }}

      - name: "Step 9: Docker Login"
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}

      - name: "Step 10: Build docker image"
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push "quay.io/numaio/numaproj-contrib/e2e-reduce-sideinput-example:$(basename $GITHUB_REF)"
          docker push "quay.io/numaio/numaproj-contrib/e2e-reduce-sideinput-udf:$(basename $GITHUB_REF)"

  sink-side-input:
    name: sink-side-input-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
    steps:
      - name: "Step 1: Set output for job"
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: "Step 2: Checkout repository"
        uses: actions/checkout@v3

      - name: "Step 3: Setup Golang"
        uses: actions/setup-go@v4.0.0
        with:
          go-version: '1.21'

      - name: "Step 4: Restore Go build cache"
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: "Step 5: Run Lint on sink-side-input udf"
        run: make lint
        working-directory: ./sink-side-input

      - name: "Step 6: Build and create docker image for sink-side-input"
        run: make image
        env:
          TAG: $(basename $GITHUB_REF)

      - name: "Step 7: Build and create docker image for reduce-side-input udf"
        run: make image
        env:
          TAG: $(basename $GITHUB_REF)
        working-directory: ./sink-side-input

      - name: "Step 8: Docker Login"
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}

      - name: "Step 9: Build docker image"
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push "quay.io/numaio/numaflow-sink/redis-e2e-test-sink-with-sideinput:$(basename $GITHUB_REF)"
          

  simple_source_with_sideinput:
    name: simple_source_with_sideinput-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
    steps:
      - name: "Step 1: Set output for job"
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: "Step 2: Checkout repository"
        uses: actions/checkout@v3

      - name: "Step 3: Setup Golang"
        uses: actions/setup-go@v4.0.0
        with:
          go-version: '1.21'

      - name: "Step 4: Restore Go build cache"
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: "Step 5: Run Lint on simple_source_with_sideinput"
        run: make lint
        working-directory: ./simple_source_with_sideinput

      - name: "Step 6: Build and create docker image for simple_source_with_sideinput"
        run: make image
        env:
          TAG: $(basename $GITHUB_REF)

      - name: "Step 7: Build and create docker image for simple_source_with_sideinput"
        run: make image
        env:
          TAG: $(basename $GITHUB_REF)
        working-directory: ./simple_source_with_sideinput

      - name: "Step 8: Docker Login"
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}

      - name: "Step 9: Build docker image"
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push "quay.io/numaio/numaflow-source/simple_source_with_sideinpu:$(basename $GITHUB_REF)" 


  sideInput_function:
    name: sideInput_function-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
    steps:
      - name: "Step 1: Set output for job"
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: "Step 2: Checkout repository"
        uses: actions/checkout@v3

      - name: "Step 3: Setup Golang"
        uses: actions/setup-go@v4.0.0
        with:
          go-version: '1.21'

      - name: "Step 4: Restore Go build cache"
        uses: actions/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: "Step 5: Run Lint on sideInput_function"
        run: make lint
        working-directory: ./sideInput_function

      - name: "Step 6: Build and create docker image for sideInput_function"
        run: make image
        env:
          TAG: $(basename $GITHUB_REF)

      - name: "Step 7: Build and create docker image for sideInput_function"
        run: make image
        env:
          TAG: $(basename $GITHUB_REF)
        working-directory: ./sideInput_function

      - name: "Step 8: Docker Login"
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}

      - name: "Step 9: Build docker image"
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push "quay.io/numaio/numaflow-sideinput/sideinput-sink-e2e-test:$(basename $GITHUB_REF)"          

